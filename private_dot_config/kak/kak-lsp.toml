snippet_support = true
# verbosity = 2

[server]
timeout = 1800 # seconds = 30 minutes

[language.clojure]
filetypes = ["clojure"]
roots = ["project.clj", "deps.edn", ".lsp/config.edn", ".git/"]
command = "clojure-lsp"

[language.go]
filetypes = ["go"]
roots = ["go.mod", ".git"]
command = "gopls"
offset_encoding = "utf-8"
settings_section = "gopls"
[language.go.settings.gopls]
# See https://github.com/golang/tools/blob/master/gopls/doc/settings.md
semanticTokens = true
codelenses = { tidy = true }

[language.deno]
filetypes = ["typescript", "javascript"]
roots = ["deno.json"]
command = "deno"
args = ["lsp"]
settings_section = "deno"
[language.deno.settings.deno]
enable = true
lint = true
unstable = true
importMap = "import_map.json"
suggest.autoImports = true
suggest.completeFunctionCalls = true
suggest.imports.autoDiscover = true
inlayHints.functionLikeReturnTypes.enabled = true

[language.theia]
filetypes = ["typescript", "javascript"]
roots = ["package.json"]
command = "typescript-language-server"
args = ["--stdio"]

[language.svelte]
filetypes = ["svelte"]
roots = ["package.json"]
command = "svelteserver"
args = ["--stdio"]

[language.css]
filetypes = ["css"]
roots = ["package.json", ".git", ".hg"]
command = "css-languageserver"
args = ["--stdio"]

[language.html]
filetypes = ["html"]
roots = ["package.json", ".git", ".hg"]
command = "html-languageserver"
args = ["--stdio"]

[language.gdscript]
filetypes = ["gd", "gdscript"]
roots = [".import"]
command = "nc"
args = ["localhost", "6008"]

[language.yaml]
filetypes = ["yaml"]
roots = [".git"]
command = "yaml-language-server"
args = ["--stdio"]

# [semantic_tokens]
# faces = [
#     {face="documentation", token="comment", modifiers=["documentation"]},
#     {face="comment", token="comment"},
#     {face="function", token="function"},
#     {face="keyword", token="keyword"},
#     {face="module", token="namespace"},
#     {face="operator", token="operator"},
#     {face="string", token="string"},
#     {face="type", token="type"},
#     {face="default", token="variable", modifiers=["readonly"]},
#     {face="default", token="variable", modifiers=["constant"]},
#     {face="variable", token="variable"},
# ]
